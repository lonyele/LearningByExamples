import * as React from "react";
import { Group, Path } from "react-konva"; // , Image
import { DoorImage } from "./DoorImage";
import Dog from "./svg/Dog.svg";
export class DogImage extends React.Component<any, any> {
  public state = {
    age: 10,
    image: null,
    name: "dog 1",
    opacity: 0.5
  };
  public componentDidMount() {
    const image = new (window as any).Image();
    image.src = Dog;
    image.onload = () => {
      // setState will redraw layer
      // because "image" property is changed
      this.setState({
        image
      });
      image.addEventListener("click", (e: any) => {
        console.log("안들어옴?");
        if (this.state.opacity === 0.5) {
          this.setState({ opacity: 1 });
        } else {
          this.setState({ opacity: 0.5 });
        }
      });
    };
  }
  public testHover = (e: any) => {
    console.log("hover~~", e);
  };
  public testEnter = (e: any) => {
    console.log("enter", e, "state", this.state);
  };
  public changeOpacity = (e: any) => {
    if (this.state.opacity === 0.5) {
      this.setState({ opacity: 1 });
    } else {
      this.setState({ opacity: 0.5 });
    }
  };

  public dragEnd = (e: any) => {
    console.log("dragEnd", e);
  };
  public render() {
    return (
      <Group draggable={true}>
        <Path
          width={200}
          height={200}
          data={`M525.143,437.648c0,0,4,58-12,70c-16,12-134.001,131-134.001,131l22,25l143.001-97l11-127L525.143,437.648z M525.142,437.648
          c0,0,4,58-12,70c-16,12-134,131-134,131l22,25l143-97l11-127L525.142,437.648z M519.912,399.654l-36.525,54.799
          c0,0-29.26,7.268-44.092,16.488c-14.832,9.221-61.437,43.25-164.547,35.949c-103.11-7.3-118.425-29.333-140.771-30.14
          c-22.346-0.806-56.138,3.076-64.329,9.314c-8.19,6.238,1.603,25.029,1.603,25.029s29.967,67.402,139.056,95.055
          s238.24-29.442,238.24-29.442l90.196-165.633L519.912,399.654z M517.005,404.01l-33.625,50.438c0,0-29.262,7.279-44.094,16.5
          c-14.832,9.22-61.422,43.238-164.531,35.938c-103.11-7.301-118.436-29.319-140.781-30.125c-22.346-0.806-56.122,3.074-64.313,9.313
          c-0.372,0.283-0.7,0.605-1,0.938c19.285-2.798,47.714-2.229,67.719,1.406c38.391,6.977,73.597,30.24,163.125,27.813
          c127.231-3.488,142.159-43.125,159.875-47.813C484.008,461.9,530.484,452.346,517.005,404.01z M106.962,554.708
          c21.532,18.707,54.481,39.055,103.344,51.442c11.765,2.981,23.77,4.961,35.813,6.15l38.712-7.848
          C220.542,614.517,142.316,575.187,106.962,554.708z M528.143,438.648c0,0,21,55,15,69s-41,94-106.001,124c-65,30-232,26-236,18
          s0,76,101,107c101,31,230.089-36.908,253.001-59c29-28,84-100,68-154s-28-38-37-53s-19-44-19-56S529.143,438.648,528.143,438.648z
           M533.724,527.638c-15.194,29.647-47.225,81.214-96.594,104c-65,30-232,26-236,18c-1-2-1.484,1.766-0.094,9l0.031,0.125l2.063,6.875
          c0,0-0.162,0.014-0.375,0.094c0.104,0.361,0.233,0.754,0.344,1.125c0.147,0.488,0.277,0.964,0.438,1.469
          c0.288,0.906,0.636,1.859,0.969,2.813c0.112,0.319,0.196,0.643,0.313,0.969c0.226,0.628,0.504,1.26,0.75,1.906
          c0.284,0.742,0.533,1.486,0.844,2.25c0.221,0.542,0.484,1.104,0.719,1.656c0.315,0.738,0.627,1.461,0.969,2.219
          c0.162,0.359,0.332,0.729,0.5,1.094c1.092,2.361,2.291,4.792,3.656,7.281c0.036,0.064,0.089,0.122,0.125,0.188
          c0.016,0.028,0.015,0.064,0.031,0.094c0.362,0.654,0.743,1.307,1.125,1.969c0.036,0.061,0.059,0.125,0.094,0.188
          c0.404,0.695,0.824,1.391,1.25,2.094c0.456,0.75,0.924,1.523,1.406,2.281c0.008,0.012,0.023,0.018,0.031,0.031
          c0.462,0.725,0.92,1.457,1.406,2.188c0.003,0.004,0.028-0.006,0.031,0c40.799,17.9,185.469-16.438,250.375-63.906
          C513.821,600.222,528.806,553.796,533.724,527.638z M559.799,430.179c-1.614,0.028-3.414,0.243-5.313,0.563
          c6.271,19.255,36.347,112.967,33.656,130.906c-3,20-34.834,92.7-87,124c-35,21-111,54-138,59
          c-17.087,3.164-50.527,7.816-76.656,6.469c4.948,1.982,10.145,3.84,15.656,5.531c101,31,230.089-36.908,253-59c29-28,84-100,68-154
          c-16-54-28-38-37-53s-19-44-19-56C567.143,431.272,564.142,430.103,559.799,430.179z M533.143,448.648c0,0-19,19-14,37
          s22,62-41.001,112c-63,50-246,137-369,42c-35-40-15-66-15-66s19.987-2.89,28-2c10-3,57,0,101,2c58.911-1.158,220-76,251-105
          c0,0,38.001-46,39.001-54s27,16,28,23S533.143,447.648,533.143,448.648z M514.6,413.045c-0.809,0.096-1.344,0.594-1.469,1.594
          c-1,8-39,54-39,54c-31,29-192.089,103.842-251,105c-44-2-91-5-101-2c-8.013-0.891-28,2-28,2s-0.366,0.527-0.906,1.438
          c10.959,3.207,30.901,7.673,63.156,8.531c74.391,1.977,105.625-2.063,170.125-27.187c67.63-26.345,158.317-60.2,193.875-141.063
          C517.971,413.817,515.901,412.891,514.6,413.045z M518.581,482.898c-8.186,28.135-41.314,102.576-168.438,145.75
          c-155.446,52.793-193.325,22.435-243.531,7.969c0.819,0.998,1.642,2.016,2.531,3.031c123,95,306,8,369-42s46-94,41-112
          C518.888,484.731,518.716,483.817,518.581,482.898z M534.473,391.425c-5.75-1.5-25.757,14.304-25.404,19.595
          c0.352,5.284,19.466,22.417,31.574,26.554c4,1,26-1,27-5s1-21-3-25S541.165,393.171,534.473,391.425z M534.473,391.425
          c-5.75-1.5-25.757,14.304-25.404,19.595c0.352,5.284,19.466,22.417,31.574,26.554c4,1,26-1,27-5s1-21-3-25
          S541.165,393.17,534.473,391.425z M533.237,391.335c-6.935,0.52-24.486,14.727-24.156,19.688c0.142,2.125,3.339,6.157,7.875,10.5
          c0.286-8.338,4.423-20.435,23.719-27.75c-2.497-1.107-4.674-1.949-6.188-2.344C534.128,391.335,533.699,391.301,533.237,391.335z
           M564.581,407.522c0.152,18.259-15.534,25.959-26.375,29.094c0.836,0.37,1.654,0.701,2.438,0.969c4,1,26-1,27-5s1-21-3-25
          C564.626,407.567,564.599,407.54,564.581,407.522z`}
          // data={`M261.597,321.465l-1.74,0.25
          // l-1.677,0.219l-1.615,0.178l-1.542,0.135l-1.5,0.104l-1.427,0.062l-1.375,0.031h-1.323l-1.26-0.042l-1.209-0.073l-1.156-0.104
          // l-1.104-0.135l-1.063-0.178l-0.999-0.198l-0.959-0.229l-0.906-0.26l-0.865-0.292l-0.823-0.323l-0.771-0.355l-0.739-0.375
          // l-0.688-0.406l-0.656-0.438l-0.614-0.458l-0.574-0.49l-0.541-0.511l-0.5-0.541l-0.469-0.563l-0.438-0.583l-0.406-0.615l-0.375-0.636
          // l-0.656-1.333l-0.552-1.417l-0.448-1.5l-0.365-1.573l-0.281-1.656l-0.198-1.719l-0.146-1.781l-0.094-1.844l-0.052-1.906l-0.01-1.948
          // l0.021-2l0.021-2.042l0.042-2.073l0.052-4.271l0.01-2.166l-2.281-48.198l-9.5,44.5c-2,8.25-4.25,16,7.75,22.25
          // c8.5,7.51-1,17.76-10.25,16.51c-27.75,0.99-23.75-17.5-21.25-30.51l1.5-19l4.5-38.75l-3.75-9.75c-30.25-7.75-50.749-13.5-73.999-26
          // l-16.5,2.25c-7.75,1.25-5.75,10-6.5,15.75l-2.5,15.76l-13.75,35.75l-1,2.989c-1,2.5-0.75,12.25,2.75,17.25l7.5,15.01
          // c5.5,8.239,7,29.239-8.5,22.489h0.25l-11.5-4.75c-8.25-3.49-15-26.239-18-42.739l0.5-23.51c-7.25-1.989-10.25,39.75-7.25,48.51
          // l7.25,21.74c2,7-6.25,9.51-12,9.51c-13.5,0-19.5-13.76-22.25-25.26l-2-8.75c-3.5-13.25-1.75-33.5,5-45.25l3.5-7.25
          // c5.75-14.5-1.75-24.75-3.5-32.25c-5.75-23.5-10.5-46.25,5.75-68.75l1.5-1.74c-0.75-1.76-5.5-5.5-8.25-14.26
          // c-6.25-20-11.75-52.75-4-52.75l5.25-0.25c13,0,9,54,24.75,50.5l112.499,1.25l20-5.49c7-2.01,13.249-6.51,19.75-10.51l13-8
          // c14.5,14.75,27.5,24,48.749,31.75c5.75,44-0.75,53.76-6.25,80l-2,10.75c-4.25,18.761-5.5,38.25-4.5,57.75l0.5,9
          // c-0.5,9.25,5,10.011,12.25,12.26C267.597,307.715,270.847,316.965,261.597,321.465h0.25H261.597z M285.597,51.967l0.563,0.417
          // l0.583,0.417l1.177,0.906l1.219,0.969l1.24,1.031l1.26,1.083l1.271,1.125l1.291,1.167l1.302,1.198l1.302,1.24l1.302,1.25
          // l2.573,2.562l1.26,1.292l1.25,1.292l1.219,1.281l1.187,1.281l8,8.489c5,5.25,12.75,4.5,19.5,6l2.75,0.25c7.25,4.01,5,12.01,2.5,18
          // l-1.5,3.76c-7.25,17.24-28.25,18.489-43.25,10.49l-6.5-3.5h-2.25l-4.75,3l-9.25,7.51c-19.5-8.5-35.25-18.51-47.75-32.01l29-36.5
          // l9.75-14l2-4.75l2.25-5.24c0,0,9-11.26,14.25-9.01c5.25,2.26,8.5,12,7.25,17l-1.5,6L285.597,51.967h0.25`}
          // image={this.state.image}
          // draggable={true}
          scale={{
            x: 0.5,
            y: 0.5
          }}
          stroke={"black"}
          fill={"green"}
          x={this.props.x}
          y={this.props.y}
          onMouseOver={this.testHover}
          onMouseEnter={this.testEnter}
          opacity={this.state.opacity}
          onClick={this.changeOpacity}
          onDragEnd={this.dragEnd}
        />
        <DoorImage x={this.props.x + 30} y={this.props.y + 30} />
      </Group>
    );
  }
}
